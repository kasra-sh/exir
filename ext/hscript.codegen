const {HTMLTags, HTMLEssentialTags} = require('../dom/htmltags');
const {map} = require('../core/collections');

const func = 'e';

const hyperMethods = map(HTMLTags, (tag) => {
    if (tag === 'var')
        return `function ${tag}_(args, ...children) {return ${func}('${tag}', args, ...children)}`;
    return `function ${tag}(args, ...children) {return ${func}('${tag}', args, ...children)}`;
});
const hyperMethodsES6 = map(HTMLTags, (tag) => {
    if (tag === 'var') return
        // return `function ${tag}_(args, ...children) {return ${func}('${tag}', args, ...children)}`;
    return `export function ${tag}(args, ...children) {return ${func}('${tag}', args, ...children)}`;
});
const hyperMethodsEssential = map(HTMLEssentialTags, (tag)=>{
    return `export function ${tag}(args, ...children) {return ${func}('${tag}', args, ...children)}`;
})
const code =
`const VNode = require('../vm/vnode').default;
var ${func} = VNode.create;
${hyperMethods.join('\n')}

module.exports = {
    ${HTMLTags.join(',\n\t').replace('var', 'var_')}, ${func}}
`

const codeES6 =
    `import VNode from '../vm/vnode';
const ${func} = VNode.create;
${hyperMethodsES6.join('\n')}

export default {
    ${HTMLTags.join(',\n\t').replace('var,\n\t', '')}, ${func}}
`

const codeES6ES =
    `import VNode from '../vm/vnode';
const ${func} = VNode.create;
${hyperMethodsEssential.join('\n')}

export default {
    ${HTMLEssentialTags.join(',\n\t')}, ${func}}
`
module.exports = function () {
    return {
        code, codeES6, codeES6ES
    };
}